@page "/expenses"

@inject ExpensesService Service
@inject IStringLocalizer<Resources.Pages.Expenses> Localizer

@attribute [Authorize]

<PageTitle>@Localizer[nameof(Resources.Pages.Expenses.ExpensesPageTitle)]</PageTitle>

<h3>@Localizer[nameof(Resources.Pages.Expenses.ExpensesPageTitle)]</h3>

@if (model.Items.Count() == 0)
{
    <h4>@Localizer[nameof(Resources.Pages.Expenses.NoExpensesMessage)]</h4>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>@Localizer[nameof(Resources.Pages.Expenses.TitleLabel)]</th>
                <th>@Localizer[nameof(Resources.Pages.Expenses.DateLabel)]</th>
                <th>@Localizer[nameof(Resources.Pages.Expenses.TotalAmountLabel)]</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in model.Items)
            {
                <tr>
                    <td>@item.Title</td>
                    <td>@item.ExpenseDate.ToShortDateString()</td>
                    <td>@item.TotalAmount.ToString("C2")</td>
                    <td>&nbsp;</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private ExpensesListModel model = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        model = await Service.GetExpensesAsync();
    }
}
