@page "/expenses/new"

@inject ExpensesService Service
@inject IStringLocalizer<Resources.Pages.NewExpense> Localizer
@inject IStringLocalizer<Resources.Shared> SharedLocalizer

<PageTitle>@Localizer[nameof(Resources.Pages.NewExpense)]</PageTitle>

<h3>@Localizer[nameof(Resources.Pages.NewExpense)]</h3>

<EditForm Model="model" OnValidSubmit="AddNewExpense">
    <DataAnnotationsValidator />

    <div class="row">
        <div class="col-md-8">
            <div class="form-group mb-3">
                <label for="expenseTitle">@Localizer[nameof(Resources.Pages.NewExpense.TitleLabel)]</label>
                <InputText @bind-Value="model.Title" class="form-control" id="expenseTitle" />
                <ValidationMessage For="@(() => model.Title)" />
            </div>

            <div class="form-group mb-3">
                <label for="expenseDate">@Localizer[nameof(Resources.Pages.NewExpense.ExpenseDateLabel)]</label>
                <InputDate @bind-Value="model.ExpenseDate" class="form-control" id="expenseDate" />
                <ValidationMessage For="@(() => model.ExpenseDate)" />
            </div>

            <div class="form-group mb-3">
                <label for="expenseTotalAmount">@Localizer[nameof(Resources.Pages.NewExpense.TotalAmount)]</label>
                <div class="input-group mb-3">
                    <span class="input-group-text">&euro;</span>
                    <InputNumber @bind-Value="model.TotalAmount" class="form-control" id="expenseTotalAmount" />
                </div>
                <ValidationMessage For="@(() => model.TotalAmount)" />
            </div>
        </div>
        <div class="col-md-4">
            <ExpenseItemsEditor Items="model.Items" />
        </div>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">@SharedLocalizer[nameof(Resources.Shared.SaveLabel)]</button>
        <button type="button" class="btn btn-outline-primary" @onclick="Cancel">@SharedLocalizer[nameof(Resources.Shared.CancelLabel)]</button>
    </div>
</EditForm>

@code {
    private NewExpenseViewModel model = new();

    async Task AddNewExpense()
    {
        try
        {
            await Service.AddNewExpenseAsync(model);
            model = new();
        }
        catch (Exception ex)
        {
            //TODO
        }
    }

    void Cancel() => model = new();


}
