@page "/expenses/{id:guid}"

@inject ExpensesService Service
@inject IJSRuntime Js 

@inject IStringLocalizer<Resources.Pages.NewExpense> Localizer
@inject IStringLocalizer<Resources.Shared> SharedLocalizer

@attribute [Authorize]

<PageTitle>Expense detail</PageTitle>

<h3>ExpenseDetails</h3>

<ExpenseForm Model="model"
             OnSave="EditExpense"
             OnCancel="Cancel"/>

@code {
    [Parameter]
    [EditorRequired]
    public Guid Id { get; set; }

    private ExpenseModel model = new();

    private string errorMessage = string.Empty;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        model = await Service.GetExpenseDetailsAsync(Id);
    }

    async Task EditExpense()
    {
        try
        {
            await Service.UpdateExpenseAsync(Id, model);
            await Js.InvokeVoidAsync("alert", $"La spesa {model.Title} è stata modificata con successo!");
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    void Cancel() => model = new();
}
